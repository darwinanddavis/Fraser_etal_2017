}
# CYLINDER
if(lometry==1){
R1<-(V/(pi*shape_b))^(1./3.)
ALENTH<-R1*shape_b
ATOT<-2*pi*R1^2+2*pi*R1*ALENTH
AWIDTH<-2.*R1
ASILN<-AWIDTH*ALENTH
ASILP<-pi*R1^2
D<-ALENTH
}
# Ellipsoid
if(lometry==2){
A1<-((3./4.)*V/(pi*shape_b*shape_c))^0.333
B1<-A1*shape_b
C1<-A1*shape_c
P1<-1.6075
ATOT<-(4*pi*(((A1^P1*B1^P1+A1^P1*C1^P1+B1^P1*C1^P1))/3)^(1/P1))
ASILN<-max(pi*A1*C1,pi*B1*C1)
ASILP<-min(pi*A1*C1,pi*B1*C1)
}
# Lizard
if(lometry==3){
ATOT<-(10.4713*mass^.688)/10000.
AV<-(0.425*mass^.85)/10000.
# NORMAL AND POINTING @ SUN SILHOUETTE AREA: PORTER & TRACY 1984
# Max. silhouette area (normal to the sun)
ASILN<-(3.798*mass^.683)/10000.
# Min. silhouette area (pointing toward the sun)
ASILP<-(0.694*mass^.743)/10000.
}
# AREA OF LEOPARD FROG (C.R. TRACY 1976 ECOL. MONOG.)
if(lometry==4){
ATOT = (12.79*mass^.606)/10000.
AV = (0.425*mass^.85)/10000.
# NORMAL AND POINTING @ SUN SILHOUETTE AREA: EQ'N 11 TRACY 1976
ZEN<-0.
PCTN<-1.38171E-06*ZEN^4-1.93335E-04*ZEN^3+4.75761E-03*ZEN^2-0.167912*ZEN+45.8228
ASILN<-PCTN*ATOT/100.
ZEN<-90.
PCTP<-1.38171E-06*ZEN^4-1.93335E-04*ZEN^3+4.75761E-03*ZEN^2-0.167912*ZEN+45.8228
ASILP<-PCTP*ATOT/100.
}
# user defined allometry
if(lometry==5){
ATOT = (customallom[1]*mass^customallom[2])/10000.
AV = (customallom[3]*mass^customallom[4])/10000.
# NORMAL AND POINTING @ SUN SILHOUETTE AREA: PORTER & TRACY 1984
# User must define Max. silhouette area (normal to the sun)
ASILN = (customallom[5]*mass^customallom[6])/10000.
# User must define Min. silhouette area (pointing toward the sun)
ASILP = (customallom[7]*mass^customallom[8])/10000.
}
# end allometry section ############################################################
if(Zen>=90){
Qnorm<-0
}else{
Qnorm <- (Qsol / cos(Zenith))
}
if(Qnorm>1367){
Qnorm<-1367 #making sure that low sun angles don't lead to solar values greater than the solar constant
}
if(posture=='p'){
Qabs<-(Qnorm*(1-pctdif)*ASILP+Qsol*pctdif*FATOSK*ATOT+Qsol*sub_reflect*FATOSB*ATOT)*abs
}
if(posture=='n'){
Qabs<-(Qnorm*(1-pctdif)*ASILN+Qsol*pctdif*FATOSK*ATOT+Qsol*sub_reflect*FATOSB*ATOT)*abs
}
if(posture=='b'){
Qabs<-(Qsol*(1-pctdif)*(ASILN+ASILP)/2+Qsol*pctdif*FATOSK*ATOT+Qsol*sub_reflect*FATOSB*ATOT)*abs
}
Rrad<-((Tskin+273)-(Trad+273))/(emis*sigma*Fo_e*ATOT*((Tskin+273)^4-(Trad+273)^4)) # radiation resistance
Re<-p*vel*D/VISDYN # Reynolds number
PR<-1005.7*VISDYN/THCOND # Prandlt number
if(lometry==0){
NUfor<-0.102*Re^0.675*PR^(1./3.)
}
if(lometry==3|lometry ==5){
NUfor<-0.35*Re^0.6
}
if(lometry==1){
#       FORCED CONVECTION OF A CYLINDER
#       ADJUSTING NU - RE CORRELATION FOR RE NUMBER (P. 260 MCADAMS,1954)
if(Re<4.){
NUfor=.891*Re**.33
}else{
if(Re<40.){
NUfor=.821*Re**.385
}else{
if(Re<4000.){
NUfor=.615*Re**.466
}else{
if(Re<40000.){
NUfor=.174*Re**.618
}else{
if(Re<400000.){
NUfor=.0239*Re**.805
}}}}}
}
if(lometry==2|lometry==4){
NUfor<-0.35*Re^(0.6) # Nusselt number, forced convection
}
hc_forced<-max(0.005,NUfor*THCOND/D) # convection coefficent, forced
GR<-abs(p^2*(1/(Tair+273.15))*9.80665*D^3*(Tskin-Tair)/VISDYN^2) # Grashof number
Raylei<-GR*PR # Rayleigh number
# get Nusselt for Free Convect
if(lometry==0){
NUfre=0.55*Raylei^0.25
}
if(lometry==1|lometry==3|lometry==5){
if(Raylei<1.0e-05){
NUfre=0.4
}else{
if(Raylei<0.1){
NUfre=0.976*Raylei^0.0784
}else{
if(Raylei<100){
NUfre=1.1173*Raylei^0.1344
}else{
if(Raylei<10000.){
NUfre=0.7455*Raylei^0.2167
}else{
if(Raylei<1.0e+09){
NUfre=0.5168*Raylei^0.2501
}else{
if(Raylei<1.0e+12){
NUfre=0.5168*Raylei^0.2501
}}}}}}
}
if(lometry==2|lometry==4){
Raylei=(GR^.25)*(PR^.333)
NUfre=2.+0.60*Raylei
}
hc_free<-max(0.005,NUfre*THCOND/D) # convection coefficent, forced
hc_comb<-hc_free+hc_forced
Rconv<-1/(hc_comb*ATOT)
j<-(Qabs/C+Tair/(Rconv*C)+Tair/(C*Rrad))
kTc<-(Tc/(rho*V*cp)*((emis*sigma*Fo_e*ATOT*((Tc+273)^4-(Trad+273)^4))/((Tc+273)-(Trad+273))+hc_comb*ATOT))
dTc<-j-kTc
list(y=dTc)
})
#return(list(y=dTc))
}
# constants
cp<-4185 #specific heat of flesh, J/kg-C
emis<-0.95 #emissivity of skin, -
sigma<-0.0000000567 #Stefan-Boltzman, W/mK
Fo_e<-0.8 #config factor, object to IR environment, -
rho<-1000 #animal density, kg/m3
abs<-0.95 #animal solar absorptivity
# 'lometry' determines whether standard or custom shapes/surface area/volume relationships are used.
# 0=plate,1=cyl,2=ellips,3=lizard (desert iguana),4=frog (leopard frog),
# 5=custom (cylinder geometry is automatically invoked when container model operates)
lometry<-3 # organism shape (see above)
# 'custallom' below operates if lometry=5, and consists of 4 pairs of values representing
# the parameters a and b of a relationship AREA=a*mass^b, where AREA is in cm2 and mass is in g.
# The first pair are a and b for total surface area, then a and b for ventral area, then for
# sillhouette area normal to the sun, then sillhouette area perpendicular to the sun
customallom<-c(10.4713,.688,0.425,0.85,3.798,.683,0.694,.743) # custom allometry coefficients (see above)
shape_a<-1.
shape_b<-3.16666666667
shape_c<-0.6666666667
posture<-'n' # pointing normal 'n' or parallel 'p' to the sun's rays?
FATOSK<-0.4 # configuration factor to sky
FATOSB<-0.4 # configuration factor to substrate
press<-101325 #atmospheric pressure, pa
sub_reflect<-0.2 # solar reflectance of substrate
pctdif<-0.1 # proportion of solar energy that is diffuse (rather than direct beam)
tzone<-paste("Etc/GMT-",10,sep="")
metout<-read.csv('/Applications/Programs/NetLogo 5.0.5/NicheMapR/Transient heat budget model/metout.csv')
soil<-read.csv('/Applications/Programs/NetLogo 5.0.5/NicheMapR/Transient heat budget model/soil.csv')
shadmet<-read.csv('/Applications/Programs/NetLogo 5.0.5/NicheMapR/Transient heat budget model/shadmet.csv')
shadsoil<-read.csv('/Applications/Programs/NetLogo 5.0.5/NicheMapR/Transient heat budget model/shadsoil.csv')
micro_sun_all<-cbind(metout[,2:5],metout[,9],metout[,11],metout[,14:16])
colnames(micro_sun_all)<-c('dates','JULDAY','TIME','TALOC','VLOC','TS','ZEN','SOLR','TSKYC')
micro_shd_all<-cbind(metout[,2],shadmet[,2:4],shadmet[,8],shadmet[,10],shadmet[,13:15])
colnames(micro_shd_all)<-c('dates','JULDAY','TIME','TALOC','VLOC','TS','ZEN','SOLR','TSKYC')
# choose a day(s) to simulate
daystart<-paste('09/11/10',sep="") # y/m/d
dayfin<-paste('10/12/31',sep="") # y/m/d
micro_sun<-subset(micro_sun_all, format(as.POSIXlt(micro_sun_all$dates), "%y/%m/%d")>=daystart & format(as.POSIXlt(micro_sun_all$dates), "%y/%m/%d")<=dayfin)
micro_shd<-subset(micro_shd_all, format(as.POSIXlt(micro_shd_all$dates), "%y/%m/%d")>=daystart & format(as.POSIXlt(micro_shd_all$dates), "%y/%m/%d")<=dayfin)
days<-as.numeric(as.POSIXlt(dayfin)-as.POSIXlt(daystart))
time<-seq(0,(days+1)*60*24,60) #60 minute intervals from microclimate output
time<-time[-1]
times2<-seq(0,(days+1)*60*24,2) #two minute intervals for prediction
time<-time*60 # minutes to seconds
times2<-times2*60 # minutes to seconds
Qsolf_sun<- approxfun(time, micro_sun[,8], rule = 2)
Tradf_sun<- approxfun(time, rowMeans(cbind(micro_sun[,6],micro_sun[,9])), rule = 2)
velf_sun<- approxfun(time, micro_sun[,5], rule = 2)
Tairf_sun<- approxfun(time, micro_sun[,4], rule = 2)
Zenf_sun<- approxfun(time, micro_sun[,7], rule = 2)
Qsolf_shd<- approxfun(time, micro_shd[,8]*.1, rule = 2)
Tradf_shd<- approxfun(time, rowMeans(cbind(micro_shd[,6],micro_shd[,9])), rule = 2)
velf_shd<- approxfun(time, micro_shd[,5], rule = 2)
Tairf_shd<- approxfun(time, micro_shd[,4], rule = 2)
Zenf_shd<- approxfun(time, micro_shd[,7], rule = 2)
Tc_min<- 3.7 # from Bundey field site (2-9-14)
Tc_max<- 60 # from max(results$Tb)
# ***************** end TRANSIENT MODEL SETUP ***************
#************************************************************
#************************************************************
# *********************** DEB MODEL *************************
# physiological traits
TMAXPR<-36 #34 ^ degrees C, voluntary thermal maximum (upper body temperature for foraging) Pamula 1997 - where frequency dropped substantially, rather than extreme (Fig. 3.42)
TMINPR<-26.0 #26.0 # ^ degrees C, voluntary thermal minimum (lower body temperature for foraging) Pamula 1997 (Fig. 3.42)
TBASK<-19#26.#23.1 # degrees C, minimum basking temperature Pamula Table 3.14
TEMERGE<-8.5#8.5 # degrees C, temperature at which animal will move to a basking site *based on Kerr and Bull 2004
ctmax<-43.0 # ^ degrees C, critical thermal maximum (used by program to determine depth selected when inactive and burrowing) (43.0, Bennett, A.F. & John-Alder, H. (1986) Thermal Relations of Some Australian Skinks (Sauria: Scincidae). Copeia, 1986, 57-64.)
ctmin<-3.5 # ^ degrees C, critical thermal minimum (used by program to determine depth selected when inactive and burrowing) (3.5, Bennett, A.F. & John-Alder, H. (1986) Thermal Relations of Some Australian Skinks (Sauria: Scincidae). Copeia, 1986, 57-64.)
ctminthresh<-12 #number of consecutive hours below CTmin that leads to death
ctkill<-1 #if 1, animal dies when it hits critical thermal limits
TPREF<-33.5 # ^ preferred body temperature (animal will attempt to regulate as close to this value as possible) (mean 31.9, range 29.4-34.3, Bennett, A.F. & John-Alder, H. (1986) Thermal Relations of Some Australian Skinks (Sauria: Scincidae). Copeia, 1986, 57-64.), mode in Pamula Fig. 3.14 around 33.5
DELTAR<-0.1 # degrees C, temperature difference between expired and inspired air
skinwet<-0.5 # estimated from data in Bently 1959 at 23 degrees and 34.5 degrees #0.2#0.35 # %, of surface area acting like a free water surface (e.g. most frogs are 100% wet, many lizards less than 5% wet)
extref<-20. # %, oxygen extraction efficiency (need to check, but based on 35 deg C for a number of reptiles, from Perry, S.F., 1992. Gas exchange strategies in reptiles and the origin of the avian lung. In: Wood, S.C., Weber, R.E., Hargens, A.R., Millard, R.W. (Eds.), Physiological Adaptations in Vertebrates: Respiration, Circulation, andMetabo -  lism. Marcel Dekker, Inc., New York, pp. 149-167.)
PFEWAT<-73. # %, fecal water (from Shine's thesis, mixed diet 75% clover, 25% mealworms)
PTUREA<-0. # %, water in excreted nitrogenous waste
FoodWater<-82#82 # 82%, water content of food (from Shine's thesis, clover)
minwater<-9.5 # %, minimum tolerated dehydration (% of wet mass) - prohibits foraging if greater than this
raindrink<-5. # daily rainfall (mm) required for animal to rehydrate from drinking (zero means standing water always available)
gutfill<-75. # % gut fill at which satiation occurs - if greater than 100%, animal always tries to forage
# behavioural traits
dayact<-1 # diurnal activity allowed (1) or not (0)?
nocturn<-0 # nocturnal activity allowed (1) or not (0)?
crepus<-0 # crepuscular activity allowed (1) or not (0)?
burrow<-1 # shelter in burrow allowed (1) or not (0)?
shdburrow<-1 #
mindepth<-2 # minimum depth (soil node) to which animal can retreat if burrowing
maxdepth<-10 # maximum depth (soil node) to which animal can retreat if burrowing
CkGrShad<-1 # shade seeking allowed (1) or not (0)?
climb<-0 # climbing to seek cooler habitats allowed (1) or not (0)?
fosorial<-0 # fossorial activity (1) or not (0)
rainact<-0 # activity is limited by rainfall (1) or not (0)?
actrainthresh<-0.1 # threshold mm of rain causing activity if rainact=1
breedactthresh<-1 # threshold numbers of hours active after start of breeding season before eggs can be laid (simulating movement to the breeding site)
fract<-1
f<-1.
MsM<-186.03*6. # produces a stomach volume of 5.3 cm3/100 g, as measured for Disosaurus dorsalis
z<-7.174*fract
delta<- 0.217
kappa_X<-0.85#0.85
v_dotref<-0.05591/24.
kappa<-0.8501
p_Mref<-45.14/24.
E_G<-7189
k_R<-0.95
k_J<-0.00628/24.
E_Hb<-6.533e+04*fract^3
E_Hj<-E_Hb*fract^3
E_Hp<-1.375e+05*fract^3
h_aref<-3.61e-11/(24.^2)
s_G<-0.01
E_Egg<-1.04e+06*fract^3# J, initial energy of one egg # this includes the residual yolk, which is eaten upon hatching
svl_met<-11 # mm, snout vent length at metamorphosis
E_m<-(p_Mref*z/kappa)/v_dotref
p_Xm<-12420 # J/h.cm2, maximum intake rate when feeding
K<-10 # half-saturation constant
X<-3265 # food density J/cm2
# for insect model
metab_mode<-0 # 0 = off, 1 = holometabolous with Dyar's rule scaling, 2 = holometabolous linear scaling, 3 = hemimetabolous with Dyar's rule scaling, 4 = hemimetabolous linear scaling
stages<-8 # number of stages (max = 8) = number of instars plus 1 for egg + 1 for pupa + 1 for imago
p_Am1<-0.9296852/24*100
p_AmIm<-2.068836/24*100
disc<-0.0307
gam<-1.6
# these next five parameters control the thermal response, effectively generating a thermal response curve
T_REF<-20 # degrees C, reference temperature - correction factor is 1 for this temperature
TA<-7130
TAL<-5.305e+04
TAH<-9.076e+04
TL<-288.
TH<-315.
arrhenius<-matrix(data = 0, nrow = 8, ncol = 5)
arrhenius[,1]<-TA # critical thermal minimum
arrhenius[,2]<-TAL # critical thermal maximum
arrhenius[,3]<-TAH # voluntary thermal minimum
arrhenius[,4]<-TL # voluntary thermal maximum
arrhenius[,5]<-TH # basking threshold
thermal_stages<-matrix(data = 0, nrow = 8, ncol = 6)
thermal_stages[,1]<-ctmin # critical thermal minimum
thermal_stages[,2]<-ctmax # critical thermal maximum
thermal_stages[,3]<-TMINPR # voluntary thermal minimum
thermal_stages[,4]<-TMAXPR # voluntary thermal maximum
thermal_stages[,5]<-TBASK # basking threshold
thermal_stages[,6]<-TPREF # preferred body temperature
behav_stages<-matrix(data = 0, nrow = 8, ncol = 14)
behav_stages[,1]<-dayact
behav_stages[,2]<-nocturn
behav_stages[,3]<-crepus
behav_stages[,4]<-burrow
behav_stages[,5]<-shdburrow
behav_stages[,6]<-mindepth
behav_stages[,7]<-maxdepth
behav_stages[,8]<-CkGrShad
behav_stages[,9]<-climb
behav_stages[,10]<-fosorial
behav_stages[,11]<-rainact
behav_stages[,12]<-actrainthresh
behav_stages[,13]<-breedactthresh
behav_stages[,14]<-flyer
water_stages<-matrix(data = 0, nrow = 8, ncol = 8)
water_stages[,1]<-skinwet
water_stages[,2]<-extref
water_stages[,3]<-PFEWAT
water_stages[,4]<-PTUREA
water_stages[,5]<-FoodWater
water_stages[,6]<-minwater
water_stages[,7]<-raindrink
water_stages[,8]<-gutfill
# composition related parameters
andens_deb<-1. # g/cm3, density of structure
d_V<-0.3 # density of structure (reflects fraction of mass that is dry)
d_E<-0.3 # density of reserve (reflects fraction of mass that is dry)
eggdryfrac<-0.3 # decimal percent, dry mass of eggs
mu_X<-525000 # J/cmol, chemical potential of food
mu_E<-585000 # J/cmol, chemical potential of reserve
mu_V<-500000 # J/cmol, chemical potential of structure
mu_P<-480000 # J/cmol, chemical potential of product (faeces)
kappa_X_P<-0.1 # fraction of food energy into faeces
# elemental maxtrix of organics
nX<-c(1,1.8,0.5,.15) # composition of food (atoms per carbon atoms for CHON)
nE<-c(1,1.8,0.5,.15) # composition of reserve (atoms per carbon atoms for CHON)
nV<-c(1,1.8,0.5,.15) # composition of structure (atoms per carbon atoms for CHON)
nP<-c(1,1.8,0.5,.15) # composition of product/faeces (atoms per carbon atoms for CHON)
N_waste<-c(5,4,3,4) # chemical formula for nitrogenous waste product, CHON, e.g. Urea c(0,3,0,1), Uric acid c(5,4,3,4)
# breeding life history
clutchsize<-2. # clutch size
eggmass<-3.787 # initial dry mass of an egg (g)
viviparous<-1 # 1=yes, 0=no
batch<-1 # invoke Pequerie et al.'s batch laying model?
# the following four parameters apply if batch = 1, i.e. animal mobilizes
breedrainthresh<-0 # rain dependent breeder? 0 means no, otherwise enter rainfall threshold in mm
# photoperiod response triggering ovulation, none (0), summer solstice (1), autumnal equinox (2),
# winter solstice (3), vernal equinox (4), specified daylength thresholds (5)
photostart<- 5 # photoperiod initiating breeding
photofinish<- 5 # photoperiod terminating breeding
daylengthstart<- 12.5 # threshold daylength for initiating breeding
daylengthfinish<- 13.8 # threshold daylength for terminating breeding
photodirs <- 1 # is the start daylength trigger during a decrease (0) or increase (1) in day length?
photodirf <- 1 # is the finish daylength trigger during a decrease (0) or increase (1) in day length?
startday<-1 # make it 90 for T. rugosa loop day of year at which DEB model starts
breedtempthresh<-200 # body temperature threshold below which breeding will occur
breedtempcum<-24*7 # cumulative time below temperature threshold for breeding that will trigger breeding
reset<-0 # reset options, 0=quit simulation upon death, 1=restart at emergence, 2=restart at first egg laid, 3=restart at end of breeding season, 4=reset at death
# frog breeding mode 0 is off,
# 1 is exotrophic aquatic (eggs start when water present in container and within breeding season)
# 2 is exotrophic terrestrial/aquatic (eggs start at specified soil node within breeding season,
# diapause at birth threshold, start larval phase if water present in container)
# 3 endotrophic terrestrial (eggs start at specified soil node within breeding season and continue
# to metamorphosis on land)
# 4 turtle mode (eggs start at specified soil node within breeding season, hatch and animals enter
# water and stay there for the rest of their life, but leave the water if no water is present)
frogbreed<-0 # frog breeding mode
frogstage<-0 # 0 is whole life cycle, 1 is just to metamorphosis ({ reset and start again)
# metabolic depression
aestivate<-0
depress<-0.2
#******************* DEB model initial conditions **************************
v_init<-3e-9
E_init<-E_Egg/v_init
E_H_init<-0
stage<-0
v_init<-(3.82^3)*fract^3 #hatchling
E_init<-E_m
E_H_init<-E_Hb+5
stage<-1
v_init<-(7.063^3)*fract^3*0.85
E_init<-E_m
E_H_init<-E_Hp+1
stage<-3
ma<-1e-4  # hourly active mortality rate (probability of mortality per hour)
mi<-0  # hourly inactive mortality rate (probability of mortality per hour)
mh<-0.5   # survivorship of hatchling in first year
# DEB model initial conditions
V_init_baby<-3e-9
E_init_baby<-E_Egg/V_init_baby
E_baby_init<-E_init_baby
V_baby_init<-V_init_baby
ms_init<-0.
cumrepro_init<-0.
q_init<-0.
hs_init<-0.
cumbatch_init<-0.
pregnant<-0
E_m<-(p_Mref*z/kappa)/v_dotref
# conversions from percent to proportion
PTUREA1<-PTUREA/100
PFEWAT1<-PFEWAT/100
FoodWater1<-FoodWater/100
water_stages[,3]<-water_stages[,3]/100
water_stages[,4]<-water_stages[,4]/100
water_stages[,5]<-water_stages[,5]/100
eggmass<-0 # initial dry mass of an egg (g) - no longer used so delete
#******************** DEB mass balance calculations ************************
nO<-cbind(nX,nV,nE,nP) # matrix of composition of organics, i.e. food, structure, reserve and faeces
CHON<-c(12,1,16,14)
wO<-CHON%*%nO
w_V=wO[3]
M_V<-d_V/w_V
yEX<-kappa_X*mu_X/mu_E # yield of reserve on food
yXE<-1/yEX # yield of food on reserve
yVE<-mu_E*M_V/E_G  # yield of structure on reserve
yPX<-kappa_X_P*mu_X/mu_P # yield of faeces on food
yXP<-1/yPX # yield of food on faeces
yPE<-yPX/yEX # yield of faeces on reserve  0.143382353
nM<-matrix(c(1,0,2,0,0,2,1,0,0,0,2,0,N_waste),nrow=4)
N_waste_inv<-c(-1*N_waste[1]/N_waste[4],(-1*N_waste[2])/(2*N_waste[4]),(4*N_waste[1]+N_waste[2]-2*N_waste[3])/(4*N_waste[4]),1/N_waste[4])
nM_inv<-matrix(c(1,0,-1,0,0,1/2,-1/4,0,0,0,1/2,0,N_waste_inv),nrow=4)
JM_JO<--1*nM_inv%*%nO
etaO<-matrix(c(yXE/mu_E*-1,0,1/mu_E,yPE/mu_E,0,0,-1/mu_E,0,0,yVE/mu_E,-1/mu_E,0),nrow=4)
w_N<-CHON%*%N_waste
############################# end input #########################################
# fixes Mike made to get it to work in R, including case-sensitive issues and other symbol changes
w_X=wO[1]
w_E=wO[3]
w_V=wO[2]
w_P=wO[4]
T_A<-TA
T_ref<-T_REF
E_egg<-E_Egg
ANDENS_deb<-andens_deb
k_Jref<-k_J
zfact<-z
vdotref<-v_dotref
p_Xmref<-p_Xm
waiting<-0
hour<-1
daycount<-1
lambda=6./12.
breeding<-1
surviv_init<-1
delta_deb<-delta
halfsat<-K
funct<-f
fecundity<-0
clutches<-0
cumrepro_prev<-0
cumbatch_prev<-0
cumbatch_init<-0
cumrepro_init<-0
stage<-3
dead<-0
E_pres<-E_init
V_pres<-v_init
E_H_pres<-E_H_init
q_pres<-q_init
hs_pres<-hs_init
surviv_pres<-surviv_init
ms_pres<-ms_init
# end fixes Mike made to get it to work in R
# *********************** END DEB MODEL *********************
#************************************************************
tick<-i
times3<-c(times2[tick],times2[tick+1])
Tc_init<-Tairf(1)+0.1 # Initial core temperature
mass<-1000             # Weight in grams
NL_shade<-10          # Shade patches
NL_food<-10          # Food patches
NL_days<-0.2            # No. of days simulated
NL_T_b<-Tc_init       # Initial T_b
NL_T_b_min<-Tc_min         # Min critical T_b
NL_T_b_max<-Tc_max        # Max critical T_b
#NL_ctminthresh<-ctminthresh # No. of consecutive hours below CTmin that leads to death
NL_reserve<-E_init        # Initial reserve density
NL_zen<-Zenf(1*60*60)     # Zenith angle
NLCommand("set Shade-patches",NL_shade,"set Food-patches",NL_food,"set No.-of-days",NL_days,"set T_b precision",
NL_T_b, "2","set Min-T_b precision", NL_T_b_min, "2","set Max-T_b precision", NL_T_b_max, "2", "set reserve-level precision", NL_reserve, "0", "setup", "set zenith", NL_zen)
a1=2:3
a1
p_Am
q()
library(rpanel)
library(iplots)
q()
q()
BioCons<-read.csv("Biological Conservation.csv", header=T,sep=",")
#str(BioCons)
BioCons<-read.csv("Biological Conservation.csv", header=T,sep=",")
setwd("/Users/matthewmalishev/Documents/Manuscripts/2015/Pearson_etal")
BioCons<-read.csv("Biological Conservation.csv", header=T,sep=",")
#str(BioCons)
entry<-BioCons$C1
entry<-entry[,2]
head(entry)
setwd("/Users/matthewmalishev/Documents/Manuscripts/2015/Pearson_etal")
journal<-read.csv("BioCons.csv",header=F,sep=",")
colnames(journal)<-c("Author","Affil"); journal
setwd("/Users/matthewmalishev/Documents/Manuscripts/2015/Pearson_etal")
journal<-read.csv("BioCons.csv",header=F,sep=",")
setwd("/Users/matthewmalishev/Documents/Manuscripts/2015/Pearson_etal")
BioCons<-read.csv("Biological Conservation.csv", header=T,sep=",")
class(BioCons)
entry<-BioCons$C1
head(entry)
entry[,2]
head(BioCons_final)
write.csv(entry, file = "BioCons_final.csv", )
BioCons_final<-read.csv("BioCons_final.csv", header=T,sep=",")
head(BioCons_final)
head(BioCons_final[,2])
BioCons<-read.csv("Biological Conservation.csv", header=T,sep=",")
#str(BioCons)
entry<-BioCons$C1
write.csv(entry, file = "BioCons_final.csv", rownames=F)
write.csv(entry, file = "BioCons_final.csv", row.names=F)
setwd("/Users/matthewmalishev/Documents/Manuscripts/2015/Pearson_etal")
journal<-read.csv("BioCons2.csv",header=F,sep=",")
colnames(journal)<-c("Author","Affil"); journal
head(journal)
q()
